#include "memory.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MEMSIZE  60
static char* memory[MEMSIZE];

void initialize_mem(){
    for(int i =0 ; i<MEMSIZE; i++){
        memory[i] = NULL;
    }
}


void free_memory(int i, int s){
    if(i>MEMSIZE || i<0){
        printf("Input index value outisde scope of memory");
        return;
    }
    for(int k = i; k <=s; k++){
        memory[k] = NULL;
    }
    return;
}

int allocate_memory(int pSize){ //trust me bro prayer emoji
    int j;
    if(pSize<=0) //pSize>MEMSIZE case is handled in line 35
        return -1;
    for(int k = 0; k<MEMSIZE; k++){
        if(memory[k]==NULL){
            if(k+pSize>MEMSIZE){
                return -1;
            }
            else{
                for( j = k; j<k+pSize; j++){
                    if(memory[j] != NULL){
                        k = j;
                        break;
                    }
                }
                if(j == k+pSize){
                    int startIndex = k;
                    while(k<k+pSize){
                        memory[k] = "placeholder";
                        k++;
                    }
                    return startIndex; 
                }
            
            }
        
        }
    }
}

void set_memory_word(int h, char*input){
    if(h>MEMSIZE || h<0){
    printf("Input index value outisde scope of memory");
    return;
    }
    if(memory[h]){
        memory[h] = NULL;
        memory[h] = input;
    }

}


